{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelectorCard.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","route","isMatchWon","winner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","otherTeamRoute","TeamPage","useState","latestMatches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","getMatches","slice","map","YearSelectorCard","years","i","push","year","MatchPage","Matches","setMatch","season","getAllMatchesWon","TeamTile","HomePage","teams","setTeams","getTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc049136.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\";\r\nfunction MatchDetailCard({teamName,match}) {\r\n\r\nif(!match)\r\nreturn null;\r\n\r\n    const otherTeam = (match.team1===teamName) ? match.team2 : match.team1;\r\n    const route = `/team/${otherTeam}`;\r\n  const isMatchWon = teamName === match.winner;\r\n\r\n\r\n    return (\r\n      <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n\r\n        <div>\r\n          <span className=\"vs\">vs</span>\r\n          <h2><Link to={route}> {otherTeam} </Link> </h2>\r\n          <h2 className=\"match-date\"> on {match.date} </h2>\r\n          <h3 className=\"match-venue\"> at {match.venue} </h3>\r\n          <h3 className=\"match-result\">{match.winner} won by {match.resultMargin} {match.result}</h3>\r\n        </div>\r\n\r\n        <div className=\"additional-detail\">\r\n          <h3>First Innings</h3>\r\n          <p>{match.team1}</p>\r\n          <h3>Second Innings</h3>\r\n          <p>{match.team2}</p>\r\n          <h3>Man of the mathch</h3>\r\n          <p>{match.playerOfMatch}</p>\r\n          <h3>Umpires</h3>\r\n          <p>{match.umpire1}, {match.umpire2} </p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default MatchDetailCard;\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction MatchSmallCard({teamName,match}) {\r\n\r\nif(!match)\r\nreturn null;\r\n\r\n    const otherTeam = (match.team1===teamName) ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/team/${otherTeam}`;\r\n  const isMatchWon = teamName === match.winner;\r\n\r\n      return (\r\n          <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n              <span className=\"vs\">vs</span>\r\n              <h1><Link to={otherTeamRoute}> {otherTeam} </Link></h1>\r\n              <p className=\"match-result\">{match.winner} won by {match.resultMargin} {match.result}</p>\r\n          </div>\r\n      );\r\n}\r\nexport default MatchSmallCard;\r\n\r\n","import {React,useEffect,useState} from 'react';\r\nimport {useParams,Link} from 'react-router-dom';\r\nimport MatchDetailCard from '../components/MatchDetailCard';\r\nimport MatchSmallCard from '../components/MatchSmallCard';\r\nimport './TeamPage.scss';\r\n\r\nfunction TeamPage() {\r\n        const[team,setTeam] = useState({latestMatches : []});\r\n        const{teamName} = useParams();\r\n        const END_YEAR = 2020;\r\n    useEffect(\r\n        () => {\r\n              const getMatches = async() => {\r\n                    const response = await fetch(`http://localhost:8080/matchData/team/${teamName}`);\r\n                    const data = await response.json();\r\n                    setTeam(data);\r\n              };\r\n           getMatches();\r\n        },[teamName]\r\n)\r\n\r\n   return (\r\n       <div className=\"TeamPage\">\r\n\r\n         <div className=\"team-name-section\">\r\n               <h1 className=\"team-name\">{team.teamName}</h1>\r\n           </div>\r\n\r\n         <div className=\"match-detail-section\">\r\n         <MatchDetailCard teamName={team.teamName} match={team.latestMatches[0]} />\r\n         </div>\r\n\r\n         {team.latestMatches.slice(1).map(match => <MatchSmallCard teamName={team.teamName} match={match} />)}\r\n\r\n           <div className=\"more-link\">\r\n               <Link to={`/team/${teamName}/season/${END_YEAR}`}> More </Link>\r\n           </div>\r\n\r\n       </div>\r\n     );\r\n}\r\n\r\nexport default TeamPage;","import {React} from 'react';\nimport {useParams, Link} from 'react-router-dom';\n\nimport './YearSelectorCard.scss';\n\nfunction YearSelectorCard({teamName}){\n\n    var years = [];\n\n    const START_YEAR = 2008;\n    const END_YEAR = 2020;\n\n    for(var i=START_YEAR;i<=END_YEAR;i++) {\n        years.push(i);\n    }\n\n    return (\n        <ol className = \"YearSelectorCard\">\n            {years.map( year => (\n                <li>\n                    <Link  to={`/team/${teamName}/season/${year}`}>{year}</Link>\n                </li>\n            ))}\n        </ol>\n    );\n\n}\nexport default YearSelectorCard;","import {React,useEffect,useState} from 'react';\r\nimport {useParams,Link} from 'react-router-dom';\r\nimport MatchDetailCard from '../components/MatchDetailCard';\r\nimport YearSelectorCard from '../components/YearSelectorCard';\r\nimport './MatchPage.scss';\r\nfunction MatchPage() {\r\n            const[Matches,setMatch] = useState([]);\r\n            const{teamName,season} = useParams();\r\n\r\n         useEffect(\r\n                () => {\r\n\r\n                      const getAllMatchesWon = async() => {\r\n                            const response = await fetch(`http://localhost:8080/matchData/season/${season}/winner/${teamName}`);\r\n                            const data = await response.json();\r\n                            setMatch(data);\r\n                      };\r\n                   getAllMatchesWon();\r\n                },[teamName, season]\r\n)\r\nreturn (\r\n    <div className=\"MatchPage\">\r\n\r\n    <div className=\"year-selector-card\">\r\n        <h3> Select Year </h3>\r\n        <YearSelectorCard teamName={teamName}/>\r\n    </div>\r\n\r\n    <div>\r\n      <h1 className=\"page-heading\">Matches won by {teamName} in {season}</h1>\r\n\r\n      <h1 className=\"home-page-link\">\r\n            <Link to={`/`}>Home</Link>\r\n      </h1>\r\n\r\n      {\r\n        Matches.map(match => <MatchDetailCard teamName={teamName} match={match}/>)\r\n      }\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchPage;\r\n\r\n","import {React} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './TeamTile.scss';\n\nfunction TeamTile({teamName}){\n\n\n    return (\n\n        <div className=\"TeamTile\">\n            <h1>\n                <Link to={`/team/${teamName}`}>\n                    {teamName}\n                </Link>\n            </h1>\n\n        </div>\n\n    );\n\n}\nexport default TeamTile;","import {React, useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport TeamTile from '../components/TeamTile';\n\nimport './HomePage.scss';\n\nfunction HomePage() {\n\n    const [teams, setTeams] = useState([]);\n\n    useEffect(\n\n                () => {\n\n                    const getTeams = async () => {\n\n                        const response = await fetch(`http://localhost:8080/teamData/team/all-teams`);\n                        const data = await response.json();\n                        setTeams(data);\n                    };\n\n                    getTeams();\n\n                }, []\n            );\n\n\n  return (\n    <div className=\"HomePage\">\n\n        <div className=\"homepage-header\">\n            <h1 className=\"app-name\"> IPL Dashboard Application</h1>\n        </div>\n\n        <div className=\"team-grid\">\n            {teams.map(team => <TeamTile teamName={team.teamName} />)}\n        </div>\n\n    </div>\n  );\n}\nexport default HomePage;","import './App.scss';\nimport TeamPage from './pages/TeamPage';\nimport MatchPage from './pages/MatchPage';\nimport HomePage from './pages/HomePage';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n                  <Route path = \"/team/:teamName/season/:season\">\n                     <MatchPage/>\n                  </Route>\n                  <Route path = \"/team/:teamName\">\n                    <TeamPage/>\n                  </Route>\n                  <Route path=\"/\">\n                    <HomePage />\n                  </Route>\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}